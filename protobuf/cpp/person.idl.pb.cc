// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: person.idl

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "person.idl.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Person_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Person_reflection_ = NULL;
const ::google::protobuf::Descriptor* Class_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Class_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_person_2eidl() {
  protobuf_AddDesc_person_2eidl();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "person.idl");
  GOOGLE_CHECK(file != NULL);
  Person_descriptor_ = file->message_type(0);
  static const int Person_offsets_[16] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Person, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Person, age_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Person, address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Person, num1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Person, num2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Person, num3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Person, num4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Person, num5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Person, num6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Person, num7_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Person, num8_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Person, num9_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Person, num10_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Person, num11_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Person, num12_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Person, num13_),
  };
  Person_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Person_descriptor_,
      Person::default_instance_,
      Person_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Person, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Person, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Person));
  Class_descriptor_ = file->message_type(1);
  static const int Class_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Class, class_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Class, persons_),
  };
  Class_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Class_descriptor_,
      Class::default_instance_,
      Class_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Class, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Class, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Class));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_person_2eidl);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Person_descriptor_, &Person::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Class_descriptor_, &Class::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_person_2eidl() {
  delete Person::default_instance_;
  delete Person_reflection_;
  delete Class::default_instance_;
  delete Class_reflection_;
}

void protobuf_AddDesc_person_2eidl() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\nperson.idl\"\356\001\n\006Person\022\014\n\004name\030\001 \002(\t\022\013\n"
    "\003age\030\002 \002(\r\022\017\n\007address\030\003 \001(\t\022\014\n\004num1\030\004 \001("
    "\r\022\014\n\004num2\030\005 \001(\r\022\014\n\004num3\030\006 \001(\r\022\014\n\004num4\030\007 "
    "\001(\r\022\014\n\004num5\030\010 \001(\r\022\014\n\004num6\030\t \001(\r\022\014\n\004num7\030"
    "\n \001(\r\022\014\n\004num8\030\013 \001(\r\022\014\n\004num9\030\014 \001(\r\022\r\n\005num"
    "10\030\r \001(\r\022\r\n\005num11\030\016 \001(\r\022\r\n\005num12\030\017 \001(\r\022\r"
    "\n\005num13\030\020 \001(\r\"5\n\005Class\022\022\n\nclass_name\030\001 \002"
    "(\t\022\030\n\007persons\030\002 \003(\0132\007.Person", 308);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "person.idl", &protobuf_RegisterTypes);
  Person::default_instance_ = new Person();
  Class::default_instance_ = new Class();
  Person::default_instance_->InitAsDefaultInstance();
  Class::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_person_2eidl);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_person_2eidl {
  StaticDescriptorInitializer_person_2eidl() {
    protobuf_AddDesc_person_2eidl();
  }
} static_descriptor_initializer_person_2eidl_;

// ===================================================================

#ifndef _MSC_VER
const int Person::kNameFieldNumber;
const int Person::kAgeFieldNumber;
const int Person::kAddressFieldNumber;
const int Person::kNum1FieldNumber;
const int Person::kNum2FieldNumber;
const int Person::kNum3FieldNumber;
const int Person::kNum4FieldNumber;
const int Person::kNum5FieldNumber;
const int Person::kNum6FieldNumber;
const int Person::kNum7FieldNumber;
const int Person::kNum8FieldNumber;
const int Person::kNum9FieldNumber;
const int Person::kNum10FieldNumber;
const int Person::kNum11FieldNumber;
const int Person::kNum12FieldNumber;
const int Person::kNum13FieldNumber;
#endif  // !_MSC_VER

Person::Person()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Person::InitAsDefaultInstance() {
}

Person::Person(const Person& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Person::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  age_ = 0u;
  address_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  num1_ = 0u;
  num2_ = 0u;
  num3_ = 0u;
  num4_ = 0u;
  num5_ = 0u;
  num6_ = 0u;
  num7_ = 0u;
  num8_ = 0u;
  num9_ = 0u;
  num10_ = 0u;
  num11_ = 0u;
  num12_ = 0u;
  num13_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Person::~Person() {
  SharedDtor();
}

void Person::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (address_ != &::google::protobuf::internal::kEmptyString) {
    delete address_;
  }
  if (this != default_instance_) {
  }
}

void Person::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Person::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Person_descriptor_;
}

const Person& Person::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_person_2eidl();
  return *default_instance_;
}

Person* Person::default_instance_ = NULL;

Person* Person::New() const {
  return new Person;
}

void Person::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    age_ = 0u;
    if (has_address()) {
      if (address_ != &::google::protobuf::internal::kEmptyString) {
        address_->clear();
      }
    }
    num1_ = 0u;
    num2_ = 0u;
    num3_ = 0u;
    num4_ = 0u;
    num5_ = 0u;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    num6_ = 0u;
    num7_ = 0u;
    num8_ = 0u;
    num9_ = 0u;
    num10_ = 0u;
    num11_ = 0u;
    num12_ = 0u;
    num13_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Person::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_age;
        break;
      }

      // required uint32 age = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_age:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &age_)));
          set_has_age();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_address;
        break;
      }

      // optional string address = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_address:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->address().data(), this->address().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_num1;
        break;
      }

      // optional uint32 num1 = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_num1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num1_)));
          set_has_num1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_num2;
        break;
      }

      // optional uint32 num2 = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_num2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num2_)));
          set_has_num2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_num3;
        break;
      }

      // optional uint32 num3 = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_num3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num3_)));
          set_has_num3();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_num4;
        break;
      }

      // optional uint32 num4 = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_num4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num4_)));
          set_has_num4();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_num5;
        break;
      }

      // optional uint32 num5 = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_num5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num5_)));
          set_has_num5();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_num6;
        break;
      }

      // optional uint32 num6 = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_num6:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num6_)));
          set_has_num6();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_num7;
        break;
      }

      // optional uint32 num7 = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_num7:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num7_)));
          set_has_num7();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_num8;
        break;
      }

      // optional uint32 num8 = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_num8:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num8_)));
          set_has_num8();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_num9;
        break;
      }

      // optional uint32 num9 = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_num9:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num9_)));
          set_has_num9();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_num10;
        break;
      }

      // optional uint32 num10 = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_num10:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num10_)));
          set_has_num10();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_num11;
        break;
      }

      // optional uint32 num11 = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_num11:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num11_)));
          set_has_num11();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_num12;
        break;
      }

      // optional uint32 num12 = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_num12:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num12_)));
          set_has_num12();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_num13;
        break;
      }

      // optional uint32 num13 = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_num13:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num13_)));
          set_has_num13();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Person::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }

  // required uint32 age = 2;
  if (has_age()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->age(), output);
  }

  // optional string address = 3;
  if (has_address()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->address(), output);
  }

  // optional uint32 num1 = 4;
  if (has_num1()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->num1(), output);
  }

  // optional uint32 num2 = 5;
  if (has_num2()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->num2(), output);
  }

  // optional uint32 num3 = 6;
  if (has_num3()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->num3(), output);
  }

  // optional uint32 num4 = 7;
  if (has_num4()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->num4(), output);
  }

  // optional uint32 num5 = 8;
  if (has_num5()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->num5(), output);
  }

  // optional uint32 num6 = 9;
  if (has_num6()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->num6(), output);
  }

  // optional uint32 num7 = 10;
  if (has_num7()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->num7(), output);
  }

  // optional uint32 num8 = 11;
  if (has_num8()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->num8(), output);
  }

  // optional uint32 num9 = 12;
  if (has_num9()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->num9(), output);
  }

  // optional uint32 num10 = 13;
  if (has_num10()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->num10(), output);
  }

  // optional uint32 num11 = 14;
  if (has_num11()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->num11(), output);
  }

  // optional uint32 num12 = 15;
  if (has_num12()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->num12(), output);
  }

  // optional uint32 num13 = 16;
  if (has_num13()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->num13(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Person::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required uint32 age = 2;
  if (has_age()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->age(), target);
  }

  // optional string address = 3;
  if (has_address()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->address(), target);
  }

  // optional uint32 num1 = 4;
  if (has_num1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->num1(), target);
  }

  // optional uint32 num2 = 5;
  if (has_num2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->num2(), target);
  }

  // optional uint32 num3 = 6;
  if (has_num3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->num3(), target);
  }

  // optional uint32 num4 = 7;
  if (has_num4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->num4(), target);
  }

  // optional uint32 num5 = 8;
  if (has_num5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->num5(), target);
  }

  // optional uint32 num6 = 9;
  if (has_num6()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->num6(), target);
  }

  // optional uint32 num7 = 10;
  if (has_num7()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->num7(), target);
  }

  // optional uint32 num8 = 11;
  if (has_num8()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->num8(), target);
  }

  // optional uint32 num9 = 12;
  if (has_num9()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->num9(), target);
  }

  // optional uint32 num10 = 13;
  if (has_num10()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->num10(), target);
  }

  // optional uint32 num11 = 14;
  if (has_num11()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->num11(), target);
  }

  // optional uint32 num12 = 15;
  if (has_num12()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->num12(), target);
  }

  // optional uint32 num13 = 16;
  if (has_num13()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->num13(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Person::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required uint32 age = 2;
    if (has_age()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->age());
    }

    // optional string address = 3;
    if (has_address()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->address());
    }

    // optional uint32 num1 = 4;
    if (has_num1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num1());
    }

    // optional uint32 num2 = 5;
    if (has_num2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num2());
    }

    // optional uint32 num3 = 6;
    if (has_num3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num3());
    }

    // optional uint32 num4 = 7;
    if (has_num4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num4());
    }

    // optional uint32 num5 = 8;
    if (has_num5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num5());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional uint32 num6 = 9;
    if (has_num6()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num6());
    }

    // optional uint32 num7 = 10;
    if (has_num7()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num7());
    }

    // optional uint32 num8 = 11;
    if (has_num8()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num8());
    }

    // optional uint32 num9 = 12;
    if (has_num9()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num9());
    }

    // optional uint32 num10 = 13;
    if (has_num10()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num10());
    }

    // optional uint32 num11 = 14;
    if (has_num11()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num11());
    }

    // optional uint32 num12 = 15;
    if (has_num12()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num12());
    }

    // optional uint32 num13 = 16;
    if (has_num13()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num13());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Person::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Person* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Person*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Person::MergeFrom(const Person& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_age()) {
      set_age(from.age());
    }
    if (from.has_address()) {
      set_address(from.address());
    }
    if (from.has_num1()) {
      set_num1(from.num1());
    }
    if (from.has_num2()) {
      set_num2(from.num2());
    }
    if (from.has_num3()) {
      set_num3(from.num3());
    }
    if (from.has_num4()) {
      set_num4(from.num4());
    }
    if (from.has_num5()) {
      set_num5(from.num5());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_num6()) {
      set_num6(from.num6());
    }
    if (from.has_num7()) {
      set_num7(from.num7());
    }
    if (from.has_num8()) {
      set_num8(from.num8());
    }
    if (from.has_num9()) {
      set_num9(from.num9());
    }
    if (from.has_num10()) {
      set_num10(from.num10());
    }
    if (from.has_num11()) {
      set_num11(from.num11());
    }
    if (from.has_num12()) {
      set_num12(from.num12());
    }
    if (from.has_num13()) {
      set_num13(from.num13());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Person::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Person::CopyFrom(const Person& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Person::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Person::Swap(Person* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(age_, other->age_);
    std::swap(address_, other->address_);
    std::swap(num1_, other->num1_);
    std::swap(num2_, other->num2_);
    std::swap(num3_, other->num3_);
    std::swap(num4_, other->num4_);
    std::swap(num5_, other->num5_);
    std::swap(num6_, other->num6_);
    std::swap(num7_, other->num7_);
    std::swap(num8_, other->num8_);
    std::swap(num9_, other->num9_);
    std::swap(num10_, other->num10_);
    std::swap(num11_, other->num11_);
    std::swap(num12_, other->num12_);
    std::swap(num13_, other->num13_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Person::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Person_descriptor_;
  metadata.reflection = Person_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Class::kClassNameFieldNumber;
const int Class::kPersonsFieldNumber;
#endif  // !_MSC_VER

Class::Class()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Class::InitAsDefaultInstance() {
}

Class::Class(const Class& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Class::SharedCtor() {
  _cached_size_ = 0;
  class_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Class::~Class() {
  SharedDtor();
}

void Class::SharedDtor() {
  if (class_name_ != &::google::protobuf::internal::kEmptyString) {
    delete class_name_;
  }
  if (this != default_instance_) {
  }
}

void Class::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Class::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Class_descriptor_;
}

const Class& Class::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_person_2eidl();
  return *default_instance_;
}

Class* Class::default_instance_ = NULL;

Class* Class::New() const {
  return new Class;
}

void Class::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_class_name()) {
      if (class_name_ != &::google::protobuf::internal::kEmptyString) {
        class_name_->clear();
      }
    }
  }
  persons_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Class::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string class_name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_class_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->class_name().data(), this->class_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_persons;
        break;
      }

      // repeated .Person persons = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_persons:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_persons()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_persons;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Class::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string class_name = 1;
  if (has_class_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->class_name().data(), this->class_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->class_name(), output);
  }

  // repeated .Person persons = 2;
  for (int i = 0; i < this->persons_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->persons(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Class::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string class_name = 1;
  if (has_class_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->class_name().data(), this->class_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->class_name(), target);
  }

  // repeated .Person persons = 2;
  for (int i = 0; i < this->persons_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->persons(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Class::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string class_name = 1;
    if (has_class_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->class_name());
    }

  }
  // repeated .Person persons = 2;
  total_size += 1 * this->persons_size();
  for (int i = 0; i < this->persons_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->persons(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Class::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Class* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Class*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Class::MergeFrom(const Class& from) {
  GOOGLE_CHECK_NE(&from, this);
  persons_.MergeFrom(from.persons_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_class_name()) {
      set_class_name(from.class_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Class::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Class::CopyFrom(const Class& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Class::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < persons_size(); i++) {
    if (!this->persons(i).IsInitialized()) return false;
  }
  return true;
}

void Class::Swap(Class* other) {
  if (other != this) {
    std::swap(class_name_, other->class_name_);
    persons_.Swap(&other->persons_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Class::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Class_descriptor_;
  metadata.reflection = Class_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
